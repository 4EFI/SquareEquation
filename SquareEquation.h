#ifndef SQUARE_EQUATION_H
#define SQUARE_EQUATION_H

struct OptionDef
{
    const char* nameOption;

    void (*func)();
};

//-----------------------------------------------------------------------------

/// \brief Константа бесконечности
const int    Infinity = 9999999;

/// \brief Константа точности
const double Accuracy = 10e-6;

const int    Debug    = false;

//-----------------------------------------------------------------------------

//{----------------------------------------------------------------------------
/// \brief Функция для решения линейного уравнения
///
/// \param a первый коэффицент линейного уравнения
/// \param b второй коэффицент линейного уравнения
/// \param *solution указатель решения линейного уравнений
///
/// \return Возвращает количество решений уравнения
///
/// \note Функция принимает коэффиценты линейного уравнения типа a*x + b = 0
///
/// \warning Эта функция изменяет элементы передаваемой переменной
///          для записи решения
//}----------------------------------------------------------------------------

int SolveLinearEquation(double a, double b, double *solution);

//{----------------------------------------------------------------------------
/// \brief Функция для решения квадратного уравнения
///
/// \param a первый коэффицент квадратного уравнения
/// \param b второй коэффицент квадратного уравнения
/// \param c третий коэффицент квадратного уравнения
/// \param *solutions массив решений квадратного уравнений
///
/// \return Возвращает количество решений уравнения
///
/// \note Функция принимает коэффиценты квадратного уравнения типа
///       a*x^2 + b*x + c = 0, выводит в передаваемый массивв
///
/// \warning Эта функция изменяет элементы передаваемого массива
//}----------------------------------------------------------------------------

int SolveSquareEquation(double a, double b, double c, double *solutions);

//{----------------------------------------------------------------------------
/// \brief Функция для вывода решений квадратного уравнения
/// \param numSolutions количество решений
/// \param *solutions массив рещений уравнения
//}----------------------------------------------------------------------------

void PrintSolutions(int numSolutions, double *solutions);

//{----------------------------------------------------------------------------
/// \brief Функция для сравнения переменных типа double с погрешностью
/// \param x первое число
/// \param y второе число
/// \param accuracy погрешность сравнения, по умолчанию равная Accurancy
/// \return True, если два числа равны с учетом погрешности, иначе False
//}----------------------------------------------------------------------------

bool CompareNumbers(double x, double y, double accuracy = Accuracy);

//{----------------------------------------------------------------------------
/// \brief Функция для ввода коэффицентов
///
/// \param *a указатель на первый коэффицент квадратного уравнения
/// \param *b указатель на второй коэффицент квадратного уравнения
/// \param *c указатель на третий коэффицент квадратного уравнения
///
/// \note При некорректном вводе данных,
///       программа просит пользователя повторно их ввести
///
/// \warning Эта функция изменяет значения вводимых переменных
//}----------------------------------------------------------------------------

void EnterCoefficient(double *a, double *b, double *c);

bool UnitTestsSquareEquation(double  a,                double b, double c,
                             int     testNumSolutions, double *testSolutions,
                             int     testNumber);

//{----------------------------------------------------------------------------
/// \brief Функция для очистки буффера вводимых данных
//}----------------------------------------------------------------------------

void ClearBuffer();

//-----------------------------------------------------------------------------

void ProcessCommandLine(int argc,       const char*     argv[],
                        int numOptions, const OptionDef options[]);

//-----------------------------------------------------------------------------

int NumWordInArray(const char* word, int sizeArr, const char* arr[]);

//-----------------------------------------------------------------------------

void Help();
void RunUnitTests();
void Woooo();
void Meow();

//-----------------------------------------------------------------------------

const OptionDef Options[] = {{"-h",      Help},
                             {"/h",      Help},
                             {"--help",  Help},
                             {"/?",      Help},
                             {"-t",      RunUnitTests},
                             {"--test",  RunUnitTests},
                             {"--woooo", Woooo},
                             {"--meow",  Meow}};

//-----------------------------------------------------------------------------

#endif
