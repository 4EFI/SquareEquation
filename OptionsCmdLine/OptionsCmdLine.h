#ifndef OPTIONS_CMD_LINE_H
#define OPTIONS_CMD_LINE_H

//{----------------------------------------------------------------------------
/// @file OptionsCmdLine.h
///
/// @mainpage
/// Files:
/// - @ref OptionsCmdLine.h
//}----------------------------------------------------------------------------

//-----------------------------------------------------------------------------

/// \brief Структура одной опции
struct Option
{
    /// \brief Название опции
    const char* name;

    //{----------------------------------------------------------------------------
    /// \brief функция, которая вызывается для определенной опции
    ///
    /// \param argc Количество аргументов командной строки
    /// \param argv[] Аргументы командной строки
    /// \param pos Индекс текущего аргумента
    ///
    /// \return Возвращает количество аргументов, которое стоит пропустить
    ///         при обработки следующих опций
    ///
    /// \note Чтобы завершить процесс обработки опций, нужно вернуть отрицательное число.
    ///       Советую возвращать отрицальное значение текущего аргумента, если хотите
    ///       завершить процесс обработки опций.
    //}-----------------------------------------------------------------------------
    // opt_handler_ptr()

    int (*func) (int argc, const char *argv[], int pos);
};

//-----------------------------------------------------------------------------

//{----------------------------------------------------------------------------
/// \brief Функция обработки опций командной строки
///
/// \param argc Количество аргументов командной строки (все аргументы, включая нулевой)
/// \param argv[] Аргументы командной строки
/// \param numOptions Количество опций
/// \param options[] Опции (типа Option)
///
/// \return Возвращает тоже самое, что и Option.func в том случае, если
///         возвращаемое значение меньше 0. Иначе возвращается 0.
///
/// \note Возвращается первое встреченное отрицательное число, если такое существует.
//}----------------------------------------------------------------------------

int ProcessCommandLine (int argc,       const char*     argv[],
                        int numOptions, const Option options[]);

//{----------------------------------------------------------------------------
/// \brief Функция для поиска слова в массиве строк
///
/// \param word Слово, которое нужно найти
/// \param sizeArr Количество строк для поиска
/// \param arr Массив строк
///
/// \return Возвращает индекс данного слова в массиве, если данное слово
///         не найдено возвращается -1.
//}----------------------------------------------------------------------------

int NumWordInArray (const char* word, int sizeArr, const char* arr[]);

//-----------------------------------------------------------------------------

#endif
